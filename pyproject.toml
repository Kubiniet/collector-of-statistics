[tool.poetry]
name = "stats_collector"
version = "0.1.0"
description = "Collector of statistics"
authors = [

]
maintainers = [

]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.75.0"
uvicorn = { version = "^0.17.0", extras = ["standard"] }
pydantic = {version = "^1.9.0", extras = ["dotenv"]}
yarl = "^1.7.2"
ujson = "^5.1.0"
SQLAlchemy = {version = "^1.4", extras = ["mypy", "asyncio"]}
alembic = "^1.7.7"
asyncpg = {version = "^0.25.0", extras = ["sa"]}
aioredis = {version = "^2.0.1", extras = ["hiredis"]}
aiofiles = "^0.8.0"
httptools = "^0.3.0"

[tool.poetry.dev-dependencies]
pytest = "^7.0"
flake8 = "^4.0.1"
mypy = "^0.910"
isort = "^5.9.3"
yesqa = "^1.2.3"
pre-commit = "^2.11.0"
wemake-python-styleguide = "^0.16.1"
black = "^22.3.0"
autoflake = "^1.4"
SQLAlchemy = {version = "^1.4", extras = ["mypy"]}
pytest-cov = "^3.0.0"
anyio = "^3.5.0"
pytest-env = "^0.6.2"
fakeredis = "^1.7.1"
requests = "^2.26.0"
httpx = "^0.22.0"


[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["stats_collector",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_return_any = false
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
    "ignore:.*unclosed.*:ResourceWarning",
]
env = [
    "STATS_COLLECTOR_DB_BASE=stats_collector_test",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
